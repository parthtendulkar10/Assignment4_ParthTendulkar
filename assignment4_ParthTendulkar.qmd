---
title: "Does Age Matter in Hollywood Casting? What the Numbers Say"
subtitle: "Assignment 4 ETC5512"
author: "Parth Tendulkar"
format: 
  html:
    css: tabs.css
    toc: false
    page-layout: full
    theme: flatly
---


```{r setup, include = TRUE, echo = FALSE, cache = FALSE}
knitr::opts_chunk$set(
  echo = TRUE,
  warning = FALSE,
  message = FALSE
)
```

::: {.tab-buttons}

<div>
  <button class="tab-button active" id="tab1" onclick="activateTab('tab1')">üìä Data</button>
  <button class="tab-button" id="tab2" onclick="activateTab('tab2')">üìù Blog</button>
  <button class="tab-button" id="tab3" onclick="activateTab('tab3')">üé¨ Behind</button>
</div>

:::
:::::: {#tab-content .tab-content .tab1-bg}
::: {#panel-tab1 .tab-panel .active}
## Data and Documenting

### Research Question

<big> **Does the age and gender dynamics of lead actors influence the commercial success of movies?**</big>

Hollywood has historically exhibited a noticeable pattern in casting, with older male actors frequently paired with significantly younger female counterparts‚Äîan occurrence far less common in reverse. This project aims to investigate whether such casting decisions are financially beneficial or simply reflective of longstanding industry biases. By combining a dataset containing actor ages and gender with another comprising detailed movie profit information, this analysis seeks to determine whether these casting patterns correlate with financial performance or persist without economic justification.

### Data Being used

**This analysis utilizes two publicly available datasets:**

-   [**Movie Revenue Dataset**](https://github.com/ntdoris/movie-revenue-analysis/blob/main/README.md): This dataset includes information such as production budget, domestic and international gross earnings, total profit, return on investment (ROI), and genre classifications.
-   [**Hollywood Age Gap Dataset**](https://hollywoodagegap.com): This dataset includes actor names, their ages at the time of each film‚Äôs release, character genders, and the age gaps between romantic leads.

**These datasets are well-suited for the objectives of this study for the following reasons:**

-   Together, these datasets provide comprehensive coverage of both financial performance and casting demographics.
-   Key variables required for analysis (age, profit, ROI, gender) are readily available and well-structured.
-   Data is in a clean and accessible format, facilitating efficient processing and exploration.
-   The age gap dataset does not have a formal license but permits use with attribution, which will be appropriately cited.
-   Both datasets are suitable sample sources for the analytical scope expected at this academic level.

### Downloading Data

**Steps to Download *Hollywood Age Gap* Dataset Data**

-   Navigate to the official website: [**www.hollywoodagegap.com**](https://hollywoodagegap.com)\
-   Click on the **"Download Data"** button located in the **Top Right Corner** of the homepage.
-   Save the downloaded **CSV file** into the `data` folder within the project directory to ensure proper access during analysis.

**Steps to Download *Movie Revenue Dataset* Dataset Data**

-   Go to the **movie-revenue-analysis** Github Repository:\
    visit <https://github.com/ntdoris/movie-revenue-analysis>
-   Locate the dataset:\
    In the repo, go to the `data` folder. and locate `final_dataset.csv`.
-   Download the file:
    -   Click on the dataset file.
    -   Click the **"Download raw file"** button.\
-   Save the downloaded **CSV file** into the `data` folder within the project directory to ensure proper access during analysis.

### Data Analysis

1.  **Load Libraries**

Loading all the essential libraries for data exploration and analysis.

```{r Load Libraries}

library(tidyverse)
library(here)
library(readr)
library(patchwork)
library(scales)

```

2.  **Read in the Data**

Read in the downloaded CSV's in dataframes.

```{r Read Data}

age_gaps_raw <- read_csv(here("data/movies.csv"))

revenue_raw <- read_csv(here("data/final_dataset.csv"))

```

3.  **Cleaning Data**

Convert movie names in both datasets to lowercase (or any consistent format) to make sure they match properly during the join. Titles might look the same visually but mismatch due to case differences, extra spaces, or punctuation, so this helps avoid losing valid matches.

```{r}

age_gaps_clean <- age_gaps_raw %>%
  mutate(join_title = str_to_lower(str_trim(`Movie Name`)))

revenue_clean <- revenue_raw %>%
  mutate(join_title = str_to_lower(str_trim(movie)))

```

4.  **join datasets**

Join datasets using Movie names and release year and drop all the non matches so that we can use this data for accurate analysis.

```{r Join Datasets}

joined_data <- age_gaps_clean %>%
  left_join(revenue_clean, by = c("join_title", 
                                  "Release Year" = "year"))

#filtering out non matches
joined_data <- joined_data %>%
  filter(!is.na(production_budget))

```

5.  **create new variables**

Creating new variables:

-   `Older Actor`       : Out of the pair what gender actor is older.  
-   `Avg Actor Age`     : Mean of `Actor 1 Age` and `Actor 2 Age`.  
-   `Profit (Millions)` : Profit the movie made in Millions for easier understanding.
-   `Age Group`         : Actor age binned into groups.

```{r new_variables}

joined_data <- joined_data %>%
  mutate(
    `Older Actor` = case_when(
      `Actor 1 Age` > `Actor 2 Age` ~ `Actor 1 Gender`,
      `Actor 1 Age` < `Actor 2 Age` ~ `Actor 2 Gender`,
      TRUE ~ "Same age"
    ),
    `Avg Actor Age` = rowMeans(select(., `Actor 1 Age`, `Actor 2 Age`), na.rm = TRUE)
  )

joined_data <- joined_data %>%
  mutate(`Profit (Millions)` = round(profit / 1000000))

joined_data <- joined_data %>%
  mutate(`Age Group` = cut(`Avg Actor Age`, breaks = c(15, 30, 40, 50, 60, 100),
                           labels = c("15‚Äì30", "31‚Äì40", "41‚Äì50", "51‚Äì60", "60+"),
                           right = FALSE))

```

6.  **Plot 1: Average Actor Age vs Profit**

```{r}

p1 <- ggplot(joined_data, aes(x = `Age Group`, y = `Profit (Millions)`, fill = `Age Group`)) +
  geom_violin(trim = FALSE, alpha = 0.6) +
  geom_boxplot(width = 0.1, color = "black", alpha = 0.8) +
  labs(title = "Profit Distribution by Actor Age Group",
       x = "Average Actor Age Group", y = "Profit (Millions USD)") +
  theme_minimal()

```

7.  **Plot 2: Age Difference vs Profit and ROI**

```{r}

# Profit vs Age Difference
p2 <- ggplot(joined_data, aes(x = `Age Difference`, y = `Profit (Millions)`)) +
  geom_point(alpha = 0.5, color = "#6a0dad") +
  geom_smooth(method = "lm", se = FALSE) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
  labs(
    title = "Profit vs Age Gap",
    x = "Age Gap (Years)",
    y = "Profit (Millions USD)"
  ) +
  theme_minimal()

# ROI vs Age Difference
p3 <- ggplot(joined_data, aes(x = `Age Difference`, y = roi)) +
  geom_point(alpha = 0.5, color = "#ff5733") +
  geom_smooth(method = "lm", se = FALSE) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
  labs(
    title = "ROI vs Age Gap",
    x = "Age Gap (Years)",
    y = "Return on Investment (ROI)"
  ) +
  theme_minimal()

# Combine side by side
age_diff <- p2 + p3


```
8.  **Plot 2: Older Actor Gender vs Profit and ROI**
```{r}

p4 <- ggplot(joined_data, aes(x = `Older Actor`, y = `Profit (Millions)`, fill = `Older Actor`)) +
  geom_boxplot() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
  labs(
    title = "Profit by Older Actor Gender",
    x = "",
    y = "Profit (Millions USD)"
  ) +
  theme_minimal()

# ROI by Older Actor
p5 <- ggplot(joined_data, aes(x = `Older Actor`, y = roi, fill = `Older Actor`)) +
  geom_boxplot() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
  labs(
    title = "ROI by Older Actor Gender",
    x = "",
    y = "Return on Investment (ROI)"
  ) +
  theme_minimal()

older_actor_plot <- p4 + p5
```

9. Dropping irrelevant variables and exporting CSV.

```{r}

joined_data <- joined_data %>%
  select(
    `Movie Name`, `Release Year`,
    `Actor 1 Age`, `Actor 2 Age`, `Actor 1 Gender`, `Actor 2 Gender`,
    `Age Difference`, `Older Actor`, `Avg Actor Age`, `Age Group`,
    production_budget, profit, `Profit (Millions)`, roi
  )


write_csv(joined_data,here("data/processed_movie_gender_data.csv"))
```

### Addtional Information

For version tracking and transparency, I have maintained a public GitHub repository containing all development stages of the project.

In addition to that I have added the following files for the markers to review:

-   `README.md`: Provides a summary of the project, methodology, and ethical considerations behind the analysis.

-   `data_dictionary.csv`: Contains clear definitions and descriptions of all key variables used after joining and cleaning the datasets.

-   `tabs.css`: Custom CSS file used to implement the tabbed layout and theming in the final visual narrative.

### AI Acknowlegement

Parts of the exploratory writing, code editing, and blog-style formatting in this project were supported by OpenAI‚Äôs ChatGPT. The tool was used to help refine language, summarize insights, and structure reflections during the analysis process. All decisions related to data handling, interpretation, and final presentation were made by the student.

[ChatGPT Queries](https://chatgpt.com/share/68528c6d-79f4-800d-a46c-e462a11f2174)
:::

::: {#panel-tab2 .tab-panel}
## Blog post

### Motivation

One thing you see all the time in movies is older male leads being cast opposite much younger female love interests. It‚Äôs been the norm in Hollywood for decades ‚Äî so much so that most people barely question it anymore.

But I started wondering: does this actually make financial sense? Are these casting choices boosting a film‚Äôs profits, or are they just outdated habits that the industry keeps repeating?

### Data

To explore the link between casting age gaps and movie profitability, I used two main datasets.

The first came from [hollywoodagegap.com](hollywoodagegap.com), which includes details on romantic leads ‚Äî how old each actor was at the time of the movie, who was older, and the size of the age gap.

The second dataset, sourced from [GitHub Repository](https://github.com/ntdoris/movie-revenue-analysis), with info like production budget, domestic and international gross, total profit, and ROI.

I cleaned both datasets and matched them using the movie title and release year. To keep things accurate, I only used rows that matched correctly. I also added a new column to identify whether the older actor in the romantic pair was the man, the woman, or if they were the same age. Finally, I calculated the average age of the pair and grouped it into bins like 15‚Äì30, 31‚Äì40, and so on ‚Äî this helped make the analysis more structured and insightful.


### Analysis

#### <big>**Do younger romantic leads lead to higher profits?**</big>

```{r echo=FALSE}

p1

```


The first plot examined how the average age of romantic leads relates to profit, using age bins like 15‚Äì30, 31‚Äì40, etc., shown through a violin plot. The 15‚Äì30 group had the widest profit range with some standout outliers, suggesting a few highly profitable films. As the age group increased, profits declined and became more tightly packed. The 60+ group was the most stable in terms of profit variation but had the lowest overall returns.

This suggests that films with younger romantic leads tend to be more profitable ‚Äî possibly because they receive more marketing, target broader audiences, or belong to more commercial genres.

#### <big>**What happens when the age gap between leads gets larger?**</big>

```{r echo=FALSE}

age_diff

```

These next two plots looked at how the age gap between romantic leads affects profit and ROI. In both cases, there was a clear downward trend ‚Äî the larger the age gap, the lower the financial return.

Most of the top-performing films had an age gap under 10 years, while movies with bigger gaps generally saw lower profits and ROI. There were a few exceptions, but they were rare.

This points to a possible disconnect: casting couples with large age differences may not resonate as well with audiences ‚Äî and it might not pay off at the box office either.


#### <big>**Does it matter whether the man or woman is older?**</big>

```{r echo=FALSE}

older_actor_plot

```

These final set of plots compared profit and ROI based on which actor was older ‚Äî the man, the woman, or if they were the same age.

Profit levels were fairly consistent across all groups. But when it came to ROI, same-age pairings performed the best. Interestingly, movies with older female leads did just as well ‚Äî if not slightly better ‚Äî than those with older male leads.

This challenges the old stereotype that older women can‚Äôt drive box office success. The data suggests they absolutely can.

### Conclusion

Overall, this analysis suggests that some of Hollywood‚Äôs go-to casting choices aren‚Äôt really backed by the numbers.

Younger romantic leads tend to bring in more profit, while larger age gaps between leads often lead to lower returns. Surprisingly, same-age pairings came out on top for ROI ‚Äî and there‚Äôs no clear advantage to casting older men with younger women.

If anything, the data points toward more balanced casting being a smarter move ‚Äî both creatively and financially. Maybe it‚Äôs time for studios to rethink some of those old habits.

### References

-   **Hollywood Age Gap Dataset**
Fisher, L. (n.d.). Hollywood Age Gap. Retrieved June 2025, from https://hollywoodagegap.com

-   **Movie Revenue Dataset**
Doris, N. (2023). Movie Revenue Analysis. GitHub repository. https://github.com/ntdoris/movie-revenue-analysis

-   **R Programming Language**
R Core Team. (2023). R: A language and environment for statistical computing (Version 4.3.1) [Computer software]. R Foundation for Statistical Computing. https://www.R-project.org/

-   **Tidyverse Package**
Wickham H, Averick M, Bryan J, Chang W, McGowan LD, Fran√ßois R, Grolemund G, Hayes A, Henry L, Hester J,
  Kuhn M, Pedersen TL, Miller E, Bache SM, M√ºller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K,
  Vaughan D, Wilke C, Woo K, Yutani H (2019). ‚ÄúWelcome to the tidyverse.‚Äù _Journal of Open Source
  Software_, *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.
  
-   **readR Package**
Wickham H, Hester J, Bryan J (2024). _readr: Read Rectangular Text Data_. R package version 2.1.5,
  <https://CRAN.R-project.org/package=readr>.
  
-   **here package**
M√ºller K (2020). _here: A Simpler Way to Find Your Files_. R package version 1.0.1,
  <https://CRAN.R-project.org/package=here>.
  
-   **scales package**
Wickham H, Pedersen T, Seidel D (2023). _scales: Scale Functions for Visualization_. R package version
  1.3.0, <https://CRAN.R-project.org/package=scales>.
  
-   **patchwork package**
Pedersen T (2024). _patchwork: The Composer of Plots_. R package version 1.3.0,
  <https://CRAN.R-project.org/package=patchwork>.
:::

::: {#panel-tab3 .tab-panel}

## Behind the Scenes

### Unseen Work

There was definitely a lot of behind-the-scenes wrangling that didn‚Äôt make it to the blog. Matching the two datasets by movie title and release year was super tedious ‚Äî some titles were formatted differently or had weird characters, so I had to manually clean a bunch. Also, just checking if age differences and gender columns made sense after merging took time. Creating the "who‚Äôs older" column seemed simple but ended up needing a few logic tweaks to get right. Most of the time went into cleaning stuff that should‚Äôve just worked.

### Challenges Faced

Biggest challenge was merging the two datasets properly. I assumed it would be a straight match on movie title + year, but even small title changes (like extra spaces or colons) threw things off. I also didn‚Äôt expect profit to have such massive values that it had to be displayed in millions. Another challenge was figuring out how to represent profit when values were both negative and positive ‚Äî some plots didn‚Äôt handle that well.

### Future Improvements

One major limitation is that this only looks at a subset of movies ‚Äî the ones that exist in both datasets. So the sample size could be biased. Also, I didn‚Äôt factor in genres or budget scale, which might affect profit trends. Ideally, I‚Äôd add genre grouping or control for budget levels next time. Another thing: I didn‚Äôt include any qualitative stuff like reviews or audience scores, which could show why certain age gaps don‚Äôt work.

### Iteration Process (5 versions)

**All Version of this Project are present in this [GitHub Repository](https://github.com/parthtendulkar10/Assignment4_ParthTendulkar)**

-   Version 1 (4d61aa2169d856722a994f09c01748034aab4089):  
In this first version, I loaded both datasets and previewed the structure. I attempted to join them by movie title only, but this led to poor match rates. The goal here was to understand the variables and check if there was potential for deeper analysis.

-   Version 2 (d3c5e1f86fcc273e7e78d06f4e8ea4adde2b478c):  
This version addressed the matching issue by trimming and lowercasing movie titles and joining them using both name and year. This improved the dataset integrity. Non-matching rows were dropped so only valid pairs remained. This version established a clean base for reliable analysis.

-   Version 3 (2eb456c9781e68cacb85aa83b13adf7f00bd7446):  
In this stage, I created new columns including Avg Actor Age, Older Actor, and Profit (Millions). I also binned average actor age into ranges for plotting. This version introduced the first meaningful visualisations showing relationships between age variables and financial outcomes.

-   Version 4 (879e29f8351d3147b35137134670427599971e40):  
Wrote and added the first full draft of the blog post, structured around motivation, data, analysis, and conclusions. Each visualisation was embedded with its explanation. This version focused purely on narrative clarity and alignment with the rubric.

-   Version 5 (372641812c62448088e4f7dfe3cc8723c6f97e38):  
This is the final submitted version after adding behind the scenes section, data dictionary, readme, and CSS and JS to style the report and blog to give it a personal touch. The writting was also refined and AI acknowledgement was also added.

:::
::::::

```{=html}
<script>
function activateTab(tabId) {
  const buttons = document.querySelectorAll('.tab-button');
  const panels = document.querySelectorAll('.tab-panel');
  const container = document.getElementById('tab-content');

  buttons.forEach(btn => btn.classList.remove('active'));
  panels.forEach(p => p.classList.remove('active'));
  container.classList.remove('tab1-bg', 'tab2-bg', 'tab3-bg');

  document.getElementById(tabId).classList.add('active');
  document.getElementById('panel-' + tabId).classList.add('active');
  container.classList.add(tabId + '-bg');
}
</script>
```
